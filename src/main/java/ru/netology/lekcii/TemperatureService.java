package ru.netology.lekcii;

public class TemperatureService {

    //cервис для массива температур, выбора среди них минимальной температуры и номера дня

    public int getMinDay(int[] temps) {  // Метод. На вход - параметр с типом Массив (набор из температур)

        int minDay = 0; // номер дня с минимальной температурой


        // перебираем все температуры
        for (int i = 0; i < temps.length; i++) { // счетчик от 0 до длины массива (невключительно)
            // i - номер ячейки
            if (temps[i] < temps[minDay]) {  // если t в этот день меньше чем t в день, который мы запомнили
                minDay = i;                  // то номер дня с мин t  = этот

            }
        }
        return minDay;

        }
//=====================================================================================================

    // пишем метод, который ищет мин t, а не мин день

//    public int getMinTemp(int[] temps) {
//
//        int minTemp = temps[0]; // мин t для начала равна температуре в ячейке 0
//
//        // ЦИКЛ ForEach (чтобы смотреть значения ячеек массива (не индексы)
//
//        for (int t : temps) {  // слева: новая переменная с типом элемента этого набора /
//                               // справа: набор по которому мы пройдемся - массив temps
//            if(t < minTemp) {
//                minTemp = t;
//            }
//            /* Java сама возьмет массив и по нему пробежится. Будет вынимать элементы по индексам и
//            отдавать их в эту переменную. Сначала возьмет элемент 0, положит в переменную t и выполнит тело цикла */
//
//        }
//        return minTemp; // после прохождения всего массива, в minTemp будет храниться минимальная t из всех расмотренных

//=====================================================================================================

// Можно внутри одного метода использовать данные уже посчитанного метода (getMinDay)
     public int getMinTemp(int[] temps){


        int minDay = getMinDay(temps); // создаем переменную и кладем в нее результат вызова уже существующего метода,
                                        // с передачей массива явным образом (входные данные)
         // здесь не создаем объект. Мы умеем выполнять getMinDay, и мы же выполняем getMinTemp

         return temps[minDay]; // возвращаем значение ячейки под этим номером



}





}

